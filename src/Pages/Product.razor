@page "/product"
@using Models

<style>
    .sticky-search-container {
        position: sticky;
        top: 64px;
        z-index: 100;
        background-color: var(--mud-palette-background);
        margin-bottom: 1rem;
        padding-top: 8px;
    }
    
    .search-paper {
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
        width: 100%;
    }

    @@media (max-width: 600px) {
        .sticky-search-container {
            top: 56px;
        }
    }
</style>

<MudGrid Class="px-4 py-4">
    <MudItem xs="12" sm="12" md="12" lg="12" xl="12">
        <MudText Typo="Typo.h6" Class="px-4">@Localizer!["Products"]</MudText>
    </MudItem>
    
    <MudItem xs="12" sm="12" md="12" lg="12" xl="12" Class="sticky-search-container">
        <MudPaper Elevation="0" Class="d-flex align-center px-4 search-paper">
            <MudAutocomplete T="ProductModel" 
                           Label="@Localizer!["SearchProducts"]"
                           SearchFunc="@SearchProducts"
                           ResetValueOnEmptyText="true"
                           CoerceText="true"
                           AdornmentIcon="@Icons.Material.Filled.Search"
                           AdornmentColor="@Color.Secondary"
                           ToStringFunc="@(p => p?.GetHumanizedName() ?? string.Empty)"
                           FullWidth="true"
                           Immediate="true"
                           Variant="Variant.Outlined"
                           ValueChanged="HandleProductSelected"
                           TextChanged="OnSearchTextChanged"/>
            
            <MudSwitch @bind-Value="ShowCheckedProductsOnly"
                      Color="Color.Success"
                      Label="@Localizer!["ShowActive"]"
                      Class="ml-2"/>
        </MudPaper>
    </MudItem>
    
    <MudItem xs="12" sm="12" md="12" lg="12" xl="12">
        @if (_filteredProducts?.Count() == 0)
        {
            <MudText Typo="Typo.body1" Class="px-4">@Localizer!["NoProductsFound"]</MudText>
        }
        else
        {
            @foreach (ProductModel? product in _filteredProducts!)
            {
                <MudCard Class="mb-4" Style="width: 100%;">
                    <MudCardHeader>
                        <CardHeaderAvatar>
                            <MudAvatar>
                                <MudIcon Icon="@Icons.Material.Filled.ProductionQuantityLimits" />
                            </MudAvatar>
                        </CardHeaderAvatar>
                        <CardHeaderContent>
                            <MudText Typo="Typo.body1">@product.GetHumanizedName()</MudText>
                            <MudText Typo="Typo.body2">R$ @product.Price</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText Typo="Typo.body1">@Localizer!["Quantity"]: @product.Stock</MudText>
                        <MudText Typo="Typo.body1">@Localizer!["CreatedAt"]: @product.CreatedAt?.ToString("dd/MM/yyyy")</MudText>
                        <MudText Typo="Typo.body2">@Localizer!["Total"]: R$ @product.GetTotalPrice().ToString("N2")</MudText>
                        
                        <MudDivider />

                        @if(product.ExpirationDate is not null || product.UpdatedAt is not null)
                        {
                            <MudIcon Icon="@Icons.Material.Filled.ChecklistRtl" Color="Color.Primary" />
                        }

                        @if (product.ExpirationDate is not null)
                        {
                            <MudText Typo="Typo.body2">@Localizer!["ExpiresIn"]: @product.ExpirationDate?.ToLocalTime().ToString("dd/MM/yyyy")</MudText>
                            
                            @if(!product.IsChecked)
                            {
                                <MudText Typo="Typo.body2">@Localizer!["DaysLeft"]: @product.GetDaysLeft()</MudText>
                            }
                        }
                        
                        @if(product.UpdatedAt is not null)
                        {
                            <MudText Typo="Typo.body2">@Localizer!["UpdatedAt"]: @product.UpdatedAt?.ToLocalTime().ToString("dd/MM/yyyy HH:mm:ss")</MudText>
                            <MudText Typo="Typo.body2">@Localizer!["TotalDuration"]: @product.GetTotalDiffTime()</MudText>
                        }
                    </MudCardContent>
                    <MudCardActions Style="justify-content: center;">
                        <MudIconButton OnClick="@(() => DeleteProductAsync(product.Id))" Icon="@Icons.Material.Filled.Delete" Variant="Variant.Filled" Color="Color.Error" Class="mx-2" />
                        <MudIconButton OnClick="@(() => EditProduct(product.Id))" Icon="@Icons.Material.Filled.Edit" Variant="Variant.Filled" Color="Color.Primary" Class="mx-2" />
                        <MudIconButton Disabled="@(product.IsChecked)" OnClick="@(() => CheckProductAsync(product))" Icon="@Icons.Material.Filled.Check" Variant="Variant.Filled" Color="Color.Success" Class="mx-2" />
                    </MudCardActions>
                </MudCard>
            }
        }
    </MudItem>
</MudGrid>

<MudFab StartIcon="@Icons.Material.Filled.ShoppingBasket" Color="Color.Primary" Style="position: fixed; right: 2rem; bottom: 6rem;"
    Href="/product-form" />